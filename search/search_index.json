{"config":{"lang":["pt"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Projeto Food Finder","text":"<p>Este \u00e9 um breve guia para ajudar voc\u00ea a come\u00e7ar com o projeto. Siga as instru\u00e7\u00f5es abaixo para configurar e executar o projeto localmente.</p>"},{"location":"#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<p>Antes de come\u00e7ar, certifique-se de ter o Node Version Manager (NVM) instalado em sua m\u00e1quina.</p>"},{"location":"#configuracao-do-projeto","title":"Configura\u00e7\u00e3o do Projeto","text":"<p>1 - Clone este reposit\u00f3rio para o seu ambiente local.</p> <p><pre><code>git clone https://github.com/seu-usuario/seu-projeto.git\n</code></pre> 2 - Navegue at\u00e9 o diret\u00f3rio do projeto.</p> <p><pre><code>cd seu-projeto\n</code></pre> 3 - Utilize o NVM para garantir que est\u00e1 usando a vers\u00e3o correta do Node.js.</p> <p><pre><code>nvm use\n</code></pre> 4 - Instale as depend\u00eancias do projeto.</p> <pre><code>npm install\n</code></pre>"},{"location":"#executando-o-projeto","title":"Executando o Projeto","text":"<p>Ap\u00f3s configurar o projeto, voc\u00ea pode execut\u00e1-lo localmente usando o seguinte comando:</p> <p><pre><code>npm run dev\n</code></pre> Este comando iniciar\u00e1 o servidor de desenvolvimento e voc\u00ea poder\u00e1 acessar o projeto no seu navegador em http://localhost:5173/.</p> <p>Isso \u00e9 tudo! Agora voc\u00ea est\u00e1 pronto para come\u00e7ar a trabalhar no Projeto de MP. Se encontrar algum problema ou tiver d\u00favidas, consulte a documenta\u00e7\u00e3o adicional ou entre em contato com a equipe de desenvolvimento. Boa codifica\u00e7\u00e3o! \ud83d\ude80</p>"},{"location":"a/","title":"sei l\u00e1, adiciona coisa do back aqui","text":""},{"location":"admin/","title":"Documenta\u00e7\u00e3o da P\u00e1gina de Administra\u00e7\u00e3o","text":"<p>Esta documenta\u00e7\u00e3o descreve a <code>AdminPage</code>, uma p\u00e1gina de administra\u00e7\u00e3o desenvolvida em React, que fornece interfaces para adicionar e excluir restaurantes e pratos.</p>"},{"location":"admin/#componentes-utilizados","title":"Componentes Utilizados","text":"<ul> <li><code>React</code> (useState): Utilizado para gerenciar os estados da p\u00e1gina.</li> <li><code>styled-components</code>: Para estilizar os componentes.</li> <li>Componentes customizados:</li> <li><code>Navbar</code>: Componente para a barra de navega\u00e7\u00e3o.</li> <li><code>RestaurantMenu</code> e <code>RestaurantDishMenu</code>: Componentes para os menus de adi\u00e7\u00e3o e exclus\u00e3o de restaurantes e pratos.</li> </ul>"},{"location":"admin/#funcionalidade","title":"Funcionalidade","text":"<p>A <code>AdminPage</code> permite aos administradores adicionar ou excluir restaurantes e pratos atrav\u00e9s de menus modais.</p>"},{"location":"admin/#estados","title":"Estados","text":"<ul> <li><code>isAddMenuVisible</code> e <code>isDeleteMenuVisible</code>: Controlam a visibilidade dos menus de adicionar e excluir.</li> </ul>"},{"location":"admin/#acoes-de-interface","title":"A\u00e7\u00f5es de Interface","text":"<ul> <li><code>toggleAddMenu</code> e <code>toggleDeleteMenu</code>: Fun\u00e7\u00f5es para alternar a visibilidade dos menus de adicionar e excluir.</li> <li><code>closeAddMenu</code> e <code>closeDeleteMenu</code>: Fun\u00e7\u00f5es para fechar os menus de adicionar e excluir.</li> </ul>"},{"location":"admin/#interface-do-usuario","title":"Interface do Usu\u00e1rio","text":"<ul> <li>A p\u00e1gina exibe dois bot\u00f5es principais: um para adicionar e outro para excluir restaurantes.</li> <li>Ao clicar em cada bot\u00e3o, um menu modal correspondente \u00e9 exibido.</li> <li>O menu de adi\u00e7\u00e3o permite inserir o nome, URL da imagem e c\u00f3digo de confirma\u00e7\u00e3o do restaurante.</li> <li>O menu de exclus\u00e3o permite inserir o nome do restaurante para exclus\u00e3o, c\u00f3digo de confirma\u00e7\u00e3o e motivo.</li> <li>Um terceiro bot\u00e3o permite excluir um prato espec\u00edfico de um restaurante, exigindo o nome do restaurante, nome do prato, c\u00f3digo de confirma\u00e7\u00e3o e motivo.</li> </ul>"},{"location":"admin/#estrutura-do-codigo","title":"Estrutura do C\u00f3digo","text":"<p>O c\u00f3digo \u00e9 organizado em uma fun\u00e7\u00e3o <code>AdminPage</code>, que retorna JSX contendo a barra de navega\u00e7\u00e3o (<code>Navbar</code>) e um container principal (<code>Containerdiv</code>). Dentro deste container, s\u00e3o exibidos os bot\u00f5es para adicionar e excluir, assim como os menus modais condicionais.</p>"},{"location":"admin/#estilos","title":"Estilos","text":"<ul> <li>Os estilos s\u00e3o definidos usando <code>styled-components</code>, permitindo uma f\u00e1cil manuten\u00e7\u00e3o e legibilidade do c\u00f3digo.</li> <li><code>Containerdiv</code>, <code>H1</code>, <code>H2</code>, <code>Button</code>, <code>MenuContainer</code>, <code>InputBox</code>, <code>CloseButton</code> e <code>RestMenu</code> s\u00e3o estilizados de forma a criar uma interface visualmente agrad\u00e1vel e funcional.</li> </ul>"},{"location":"admin/#exemplo-de-uso","title":"Exemplo de Uso","text":"<pre><code>import React from 'react';\nimport { AdminPage } from './AdminPage';\n\nfunction App() {\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;AdminPage /&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"cadastro/","title":"Documenta\u00e7\u00e3o das P\u00e1ginas de Cadastro e Login","text":"<p>Esta documenta\u00e7\u00e3o abrange duas p\u00e1ginas do projeto React: <code>SingUpPage</code> (Cadastro) e <code>SingInPage</code> (Login), explicando suas funcionalidades, estruturas e componentes.</p>"},{"location":"cadastro/#singuppage-pagina-de-cadastro","title":"SingUpPage (P\u00e1gina de Cadastro)","text":""},{"location":"cadastro/#componentes-e-bibliotecas-utilizadas","title":"Componentes e Bibliotecas Utilizadas","text":"<ul> <li><code>React</code> (useState): para gerenciar o estado.</li> <li><code>Navbar</code>: componente para a barra de navega\u00e7\u00e3o.</li> <li><code>Link</code> de <code>react-router-dom</code>: para navega\u00e7\u00e3o.</li> </ul>"},{"location":"cadastro/#funcionalidade","title":"Funcionalidade","text":"<p>A p\u00e1gina de cadastro permite que usu\u00e1rios se registrem como pessoa f\u00edsica ou restaurante. Se o usu\u00e1rio selecionar \"Restaurante\", campos adicionais para detalhes do restaurante s\u00e3o exibidos.</p>"},{"location":"cadastro/#estados","title":"Estados","text":"<ul> <li><code>showRestaurantFields</code>: Controla a exibi\u00e7\u00e3o dos campos espec\u00edficos para cadastro de restaurante.</li> </ul>"},{"location":"cadastro/#logica-da-interface","title":"L\u00f3gica da Interface","text":"<ul> <li>A p\u00e1gina exibe um formul\u00e1rio com campos para nome, email e senha.</li> <li>Se <code>showRestaurantFields</code> for verdadeiro, campos adicionais para URL da imagem, latitude e longitude s\u00e3o exibidos.</li> <li>Um menu suspenso permite que o usu\u00e1rio escolha entre se registrar como \"Pessoa Fisica\" ou \"Restaurante\".</li> <li>O formul\u00e1rio \u00e9 enviado para um servidor local (<code>http://127.0.0.1:5000/cadastro</code>).</li> </ul>"},{"location":"cadastro/#singinpage-pagina-de-login","title":"SingInPage (P\u00e1gina de Login)","text":""},{"location":"cadastro/#componentes-e-bibliotecas-utilizadas_1","title":"Componentes e Bibliotecas Utilizadas","text":"<ul> <li><code>React</code> (useState, useEffect): para gerenciar estados e o ciclo de vida do componente.</li> <li><code>axios</code>: para fazer requisi\u00e7\u00f5es HTTP.</li> <li><code>useNavigate</code> de <code>react-router-dom</code>: para navega\u00e7\u00e3o program\u00e1tica.</li> <li><code>Navbar</code>: componente para a barra de navega\u00e7\u00e3o.</li> </ul>"},{"location":"cadastro/#funcionalidade_1","title":"Funcionalidade","text":"<p>A p\u00e1gina de login permite que usu\u00e1rios entrem no sistema usando seu email e senha.</p>"},{"location":"cadastro/#estados_1","title":"Estados","text":"<ul> <li><code>login</code> e <code>senha</code>: Armazenam os dados de entrada do usu\u00e1rio.</li> <li><code>users</code>: Armazena os dados dos usu\u00e1rios obtidos do servidor.</li> </ul>"},{"location":"cadastro/#logica-da-interface_1","title":"L\u00f3gica da Interface","text":"<ul> <li>A p\u00e1gina exibe um formul\u00e1rio para login com campos para email e senha.</li> <li>Os dados dos usu\u00e1rios s\u00e3o carregados do servidor na montagem do componente.</li> <li>O bot\u00e3o \"Logar\" envia o formul\u00e1rio e verifica as credenciais do usu\u00e1rio.</li> <li>Se as credenciais forem v\u00e1lidas, o usu\u00e1rio \u00e9 redirecionado para a p\u00e1gina inicial e suas informa\u00e7\u00f5es s\u00e3o armazenadas no <code>localStorage</code>.</li> </ul>"},{"location":"cadastro/#estilos","title":"Estilos","text":"<p>Ambas as p\u00e1ginas utilizam o arquivo de estilo <code>signIn-up.css</code> para a estiliza\u00e7\u00e3o dos formul\u00e1rios e conte\u00fado.</p>"},{"location":"cadastro/#exemplo-de-uso","title":"Exemplo de Uso","text":"<p>Para incorporar essas p\u00e1ginas em um aplicativo React, importe e use-as dentro de um componente de roteamento:</p> <pre><code>import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { SingUpPage, SingInPage } from './pages';\n\nfunction App() {\n  return (\n    &lt;Router&gt;\n      &lt;Routes&gt;\n        &lt;Route path=\"/SingUp\" element={&lt;SingUpPage /&gt;} /&gt;\n        &lt;Route path=\"/SingIn\" element={&lt;SingInPage /&gt;} /&gt;\n      &lt;/Routes&gt;\n    &lt;/Router&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"contribuicao-docs/","title":"Guia de Contribui\u00e7\u00e3o para a Documenta\u00e7\u00e3o","text":""},{"location":"contribuicao-docs/#estrutura-de-arquivos","title":"Estrutura de Arquivos","text":"<p>A organiza\u00e7\u00e3o do reposit\u00f3rio \u00e9 a seguinte:</p> <pre><code>.\n\u251c\u2500\u2500 docs\n\u2502   \u251c\u2500\u2500 (DIRET\u00d3RIO DE IMAGENS)\n\u2502   \u251c\u2500\u2500 contribuicao-docs.md\n\u2502   \u251c\u2500\u2500 homepage.md\n\u2502   \u251c\u2500\u2500 index.md\n\u2502   \u2514\u2500\u2500 (demais arquivos...)\n\u2514\u2500\u2500 mkdocs.yml\n</code></pre> <p>A pasta <code>docs</code> cont\u00e9m todos os documentos de texto e o arquivo <code>mkdocs.yml</code> define as configura\u00e7\u00f5es do site.</p>"},{"location":"contribuicao-docs/#configurando-o-ambiente","title":"Configurando o Ambiente","text":"<p>\u00c9 utilizado o framework Mkdocs para gerar o site da documenta\u00e7\u00e3o. \u00c9 aconselh\u00e1vel ler a documenta\u00e7\u00e3o oficial para entender todas as funcionalidades dispon\u00edveis. Al\u00e9m disso, \u00e9 essencial conhecer a sintaxe do Markdown para editar os arquivos <code>.md</code>.</p> <p>Para come\u00e7ar, clone o Reposit\u00f3rio:</p> <pre><code>git clone git@github.com:JoaoVictorRomero/ff-docs.git\n</code></pre> <p>Instale o Mkdocs Material com o comando:</p> <pre><code>pip install mkdocs-material\n</code></pre> <p>Para visualizar o site localmente, execute:</p> <pre><code>mkdocs serve\n</code></pre> <p>Agora, voc\u00ea pode acessar o site pelo link: http://127.0.0.1:8000/.</p>"},{"location":"contribuicao-docs/#editando-a-documentacao","title":"Editando a Documenta\u00e7\u00e3o","text":""},{"location":"contribuicao-docs/#adicionando-secoes-a-barra-lateral","title":"Adicionando Se\u00e7\u00f5es \u00e0 Barra Lateral","text":"<p>O arquivo <code>mkdocs.yml</code> cont\u00e9m a estrutura de navega\u00e7\u00e3o sob a chave <code>nav</code>. Por exemplo:</p> <pre><code>nav:\n  - Sobre: \"index.md\"\n  - Frontend:\n    - HomePage: 'homepage.md'\n  - Backend:\n    - SLA: 'a.md'\n  - Outros:\n    - Contribui\u00e7\u00e3o para Docs: 'contribuicao-docs.md'\n</code></pre> <p>As se\u00e7\u00f5es de primeiro n\u00edvel (ex. Sobre, Frontend) representam os t\u00edtulos na barra lateral esquerda, enquanto as se\u00e7\u00f5es aninhadas representam as p\u00e1ginas de conte\u00fado dentro da pasta <code>docs</code>. Para adicionar uma nova p\u00e1gina, insira o nome do arquivo correspondente no <code>mkdocs.yml</code>.</p>"},{"location":"contribuicao-docs/#edicao-direta","title":"Edi\u00e7\u00e3o Direta","text":"<p>Para editar rapidamente, clique no \u00edcone  localizado no topo da p\u00e1gina. Voc\u00ea ser\u00e1 redirecionado para o arquivo da p\u00e1gina no GitHub, onde poder\u00e1 fazer altera\u00e7\u00f5es diretamente.</p> <p>Observa\u00e7\u00e3o</p> <p>Qualquer altera\u00e7\u00e3o feita na <code>main branch</code> ser\u00e1 automaticamente publicada no site.</p>"},{"location":"homepage/","title":"HomePage Component","text":""},{"location":"homepage/#overview","title":"Overview","text":"<p>O componente <code>HomePage</code> \u00e9 uma p\u00e1gina principal de um aplicativo de restaurante, apresentando uma lista de pratos dispon\u00edveis. Ele utiliza a biblioteca <code>styled-components</code> para estiliza\u00e7\u00e3o e <code>axios</code> para poss\u00edveis requisi\u00e7\u00f5es HTTP.</p>"},{"location":"homepage/#estrutura","title":"Estrutura","text":""},{"location":"homepage/#componentes-utilizados","title":"Componentes Utilizados","text":"<ul> <li><code>Navbar</code>: Um componente que representa a barra de navega\u00e7\u00e3o.</li> <li><code>Prato</code>: Um componente representando um prato individual na lista. Este componente ainda n\u00e3o est\u00e1 definido no c\u00f3digo fornecido.</li> </ul>"},{"location":"homepage/#importacoes","title":"Importa\u00e7\u00f5es","text":"<ul> <li><code>styled</code> de <code>styled-components</code> para criar componentes estilizados.</li> <li>Imagens de pratos de diferentes diret\u00f3rios.</li> <li><code>useEffect</code> do React (n\u00e3o usado no exemplo fornecido).</li> <li><code>axios</code> para poss\u00edveis requisi\u00e7\u00f5es HTTP.</li> </ul>"},{"location":"homepage/#jsx-structure","title":"JSX Structure","text":"<p>O JSX do componente <code>HomePage</code> \u00e9 estruturado da seguinte forma:</p> <ul> <li>Um componente <code>Navbar</code>.</li> <li>Um container <code>ul</code> que lista tr\u00eas <code>Prato</code>, cada um passando uma imagem diferente como propriedade.</li> </ul>"},{"location":"homepage/#estilos-css","title":"Estilos CSS","text":""},{"location":"homepage/#container","title":"Container","text":"<p>Definido com um fundo escuro, estilo flex, e altura ajustada para ocupar a altura da viewport menos um valor fixo.</p>"},{"location":"homepage/#prato","title":"Prato","text":"<p>Cada <code>Prato</code> \u00e9 um item de lista com estiliza\u00e7\u00e3o pr\u00f3pria:</p> <ul> <li>Fundo com uma imagem passada via props.</li> <li>T\u00edtulos e pre\u00e7os estilizados com cores espec\u00edficas e espa\u00e7amento de letra.</li> <li>Um bot\u00e3o estilizado para mais informa\u00e7\u00f5es.</li> </ul>"},{"location":"homepage/#exemplo-de-uso","title":"Exemplo de Uso","text":"<pre><code>import React from 'react';\nimport { HomePage } from './HomePage'; // Caminho de importa\u00e7\u00e3o apropriado\n\nfunction App() {\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;HomePage /&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"searchpage/","title":"Documenta\u00e7\u00e3o da P\u00e1gina de Busca","text":"<p>Esta documenta\u00e7\u00e3o fornece um guia detalhado sobre a funcionalidade e o c\u00f3digo da <code>SearchPage</code>, uma p\u00e1gina de busca de produtos implementada em React.</p>"},{"location":"searchpage/#componentes-utilizados","title":"Componentes Utilizados","text":"<ul> <li><code>React</code> (useState, useEffect): para gerenciar o estado e o ciclo de vida do componente.</li> <li><code>axios</code>: para fazer requisi\u00e7\u00f5es HTTP.</li> <li>Componentes customizados:</li> <li><code>Navbar</code>: um componente para a barra de navega\u00e7\u00e3o.</li> <li>Arquivos de estilo: <code>search.css</code> para estiliza\u00e7\u00e3o.</li> </ul>"},{"location":"searchpage/#funcionalidade","title":"Funcionalidade","text":"<p>A <code>SearchPage</code> permite aos usu\u00e1rios buscar produtos por nome e filtrar os resultados por categoria.</p>"},{"location":"searchpage/#estados","title":"Estados","text":"<ul> <li><code>value</code>: Mant\u00e9m o estado da categoria selecionada (<code>'all'</code> por padr\u00e3o).</li> <li><code>dados</code>: Armazena os dados dos produtos recebidos do servidor.</li> <li><code>searchText</code>: Armazena o texto atual da busca.</li> </ul>"},{"location":"searchpage/#requisicao-de-dados","title":"Requisi\u00e7\u00e3o de Dados","text":"<ul> <li>A p\u00e1gina faz uma requisi\u00e7\u00e3o para um servidor local (<code>http://127.0.0.1:5000/produtos</code>) para obter dados dos produtos.</li> <li>Esta requisi\u00e7\u00e3o \u00e9 realizada no carregamento da p\u00e1gina (<code>useEffect</code> com um array de depend\u00eancias vazio).</li> </ul>"},{"location":"searchpage/#interface-do-usuario","title":"Interface do Usu\u00e1rio","text":"<ul> <li>Barra de Busca: Permite que os usu\u00e1rios digitem um texto para buscar produtos.</li> <li>Filtro de Categoria: Permite que os usu\u00e1rios filtrem os produtos por categorias espec\u00edficas como 'Entrada', 'Sobremesa', 'Prato Principal', ou 'Tudo'.</li> <li>Exibi\u00e7\u00e3o de Produtos: Os produtos s\u00e3o listados em cart\u00f5es, incluindo imagem, pre\u00e7o, nome, restaurante e descri\u00e7\u00e3o. Um filtro de texto e categoria \u00e9 aplicado aos dados.</li> </ul>"},{"location":"searchpage/#filtragem-de-produtos","title":"Filtragem de Produtos","text":"<ul> <li>A filtragem \u00e9 feita em duas etapas:</li> <li>Filtro de Texto: Compara o texto da busca com o nome do produto.</li> <li>Filtro de Categoria: Compara a categoria selecionada com a descri\u00e7\u00e3o do produto.</li> </ul>"},{"location":"searchpage/#estrutura-do-codigo","title":"Estrutura do C\u00f3digo","text":"<p>O c\u00f3digo est\u00e1 estruturado em uma fun\u00e7\u00e3o <code>SearchPage</code>, que retorna JSX. O JSX inclui a barra de navega\u00e7\u00e3o (<code>Navbar</code>), a se\u00e7\u00e3o de busca, e a se\u00e7\u00e3o de exibi\u00e7\u00e3o de produtos. Dentro da se\u00e7\u00e3o de produtos, h\u00e1 uma l\u00f3gica condicional para exibir os produtos filtrados ou uma mensagem de carregamento.</p>"},{"location":"searchpage/#exemplo-de-uso","title":"Exemplo de Uso","text":"<pre><code>import React from 'react';\nimport { SearchPage } from './SearchPage';\n\nfunction App() {\n  return (\n    &lt;div className=\"App\"&gt;\n      &lt;SearchPage /&gt;\n    &lt;/div&gt;\n  );\n}\n\nexport default App;\n</code></pre>"},{"location":"seguranca/","title":"Considera\u00e7\u00f5es Avan\u00e7adas","text":""},{"location":"seguranca/#continuacao-da-documentacao-do-servidor-flask-com-sqlalchemy","title":"Continua\u00e7\u00e3o da Documenta\u00e7\u00e3o do Servidor Flask com SQLAlchemy","text":""},{"location":"seguranca/#seguranca-e-autenticacao","title":"Seguran\u00e7a e Autentica\u00e7\u00e3o","text":"<p>A implementa\u00e7\u00e3o atual n\u00e3o inclui medidas espec\u00edficas de seguran\u00e7a ou autentica\u00e7\u00e3o. \u00c9 altamente recomend\u00e1vel implementar tais funcionalidades, especialmente considerando a natureza sens\u00edvel dos dados de usu\u00e1rios e neg\u00f3cios. Algumas sugest\u00f5es incluem:</p> <ul> <li>Hashing de Senhas: Armazenar senhas em texto puro, como \u00e9 o caso atual, \u00e9 uma pr\u00e1tica insegura. Utilizar bibliotecas como <code>bcrypt</code> para hash e verifica\u00e7\u00e3o de senhas \u00e9 essencial.</li> <li>Tokens de Autentica\u00e7\u00e3o: Implementar tokens JWT (JSON Web Tokens) para autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o de usu\u00e1rios.</li> <li>Valida\u00e7\u00e3o de Entrada: Assegurar que todas as entradas do usu\u00e1rio sejam validadas para evitar ataques como SQL Injection.</li> </ul>"},{"location":"seguranca/#desempenho-e-otimizacao","title":"Desempenho e Otimiza\u00e7\u00e3o","text":"<ul> <li>Pagina\u00e7\u00e3o: Para endpoints que retornam grandes quantidades de dados, como listagem de todos os produtos ou usu\u00e1rios, considerar a implementa\u00e7\u00e3o de pagina\u00e7\u00e3o para melhorar o desempenho e a usabilidade.</li> <li>Caching: Implementar cache para as respostas mais frequentes pode reduzir o tempo de resposta e a carga no servidor e no banco de dados.</li> </ul>"},{"location":"seguranca/#manutencao-e-escalabilidade","title":"Manuten\u00e7\u00e3o e Escalabilidade","text":"<ul> <li>Documenta\u00e7\u00e3o Swagger ou OpenAPI: Para melhorar a manuten\u00e7\u00e3o e usabilidade da API, considerar a implementa\u00e7\u00e3o de uma documenta\u00e7\u00e3o interativa usando Swagger ou OpenAPI.</li> <li>Dockeriza\u00e7\u00e3o: Empacotar a aplica\u00e7\u00e3o em containers Docker pode facilitar a implanta\u00e7\u00e3o e escala.</li> </ul>"},{"location":"seguranca/#testes","title":"Testes","text":"<ul> <li>Testes Unit\u00e1rios e de Integra\u00e7\u00e3o: Implementar testes automatizados para garantir a confiabilidade e estabilidade do c\u00f3digo ao longo do tempo e durante a refatora\u00e7\u00e3o.</li> <li>Testes de Carga: Para garantir que a aplica\u00e7\u00e3o possa lidar com um n\u00famero elevado de solicita\u00e7\u00f5es, realizar testes de carga e stress.</li> </ul>"},{"location":"server/","title":"Documenta\u00e7\u00e3o do Servidor Flask com SQLAlchemy","text":"<p>Esta documenta\u00e7\u00e3o detalha a implementa\u00e7\u00e3o de um servidor Flask que utiliza SQLAlchemy para intera\u00e7\u00e3o com um banco de dados MySQL. O servidor oferece APIs para gerenciar usu\u00e1rios, produtos, restaurantes e pesquisas de produtos e restaurantes.</p>"},{"location":"server/#configuracao-inicial","title":"Configura\u00e7\u00e3o Inicial","text":"<ul> <li>Flask: Framework utilizado para criar o servidor web.</li> <li>SQLAlchemy: ORM (Object-Relational Mapping) utilizado para interagir com o banco de dados MySQL.</li> <li>Flask_CORS: Utilizado para habilitar o Cross-Origin Resource Sharing (CORS).</li> <li>mysql.connector: Conector para MySQL.</li> <li>JSON: Formato de dados para as respostas da API.</li> </ul>"},{"location":"server/#modelos-de-dados","title":"Modelos de Dados","text":"<ul> <li>usuarios: Representa usu\u00e1rios, com campos para ID, nome, fun\u00e7\u00e3o, login e senha.</li> <li>produtos: Representa produtos, com campos para ID, nome, ID do restaurante, pre\u00e7o, descri\u00e7\u00e3o e imagem.</li> <li>restaurantes: Representa restaurantes, com campos para ID, nome, dist\u00e2ncia e logo.</li> <li>pesquisas_produto e pesquisas_restaurante: Representam pesquisas realizadas por produtos e restaurantes, respectivamente.</li> </ul>"},{"location":"server/#endpoints-da-api","title":"Endpoints da API","text":"<ol> <li>Usu\u00e1rios:</li> <li><code>GET /usuarios</code>: Retorna todos os usu\u00e1rios.</li> <li><code>GET /usuario/&lt;id_usuario&gt;</code>: Retorna um usu\u00e1rio espec\u00edfico pelo ID.</li> <li><code>POST /usuarios</code>: Cria um novo usu\u00e1rio.</li> <li><code>PUT /usuario/&lt;id_usuario&gt;</code>: Atualiza um usu\u00e1rio existente.</li> <li> <p><code>DELETE /usuario/&lt;id_usuario&gt;</code>: Deleta um usu\u00e1rio.</p> </li> <li> <p>Produtos:</p> </li> <li><code>GET /produtos</code>: Retorna todos os produtos.</li> <li><code>GET /produto/&lt;id_produto&gt;</code>: Retorna um produto espec\u00edfico pelo ID.</li> <li><code>POST /produtos</code>: Cria um novo produto.</li> <li><code>PUT /produto/&lt;id_produto&gt;</code>: Atualiza um produto existente.</li> <li> <p><code>DELETE /produto/&lt;id_produto&gt;</code>: Deleta um produto.</p> </li> <li> <p>Restaurantes:</p> </li> <li><code>GET /restaurantes</code>: Retorna todos os restaurantes.</li> <li><code>GET /restaurante/&lt;id_restaurante&gt;</code>: Retorna um restaurante espec\u00edfico pelo ID.</li> <li><code>POST /restaurantes</code>: Cria um novo restaurante.</li> <li><code>PUT /restaurante/&lt;id_restaurante&gt;</code>: Atualiza um restaurante existente.</li> <li> <p><code>DELETE /restaurante/&lt;id_restaurante&gt;</code>: Deleta um restaurante.</p> </li> <li> <p>Pesquisas:</p> </li> <li><code>GET /pesquisas_produto</code>: Retorna todas as pesquisas de produtos.</li> <li><code>GET /pesquisa_produto/&lt;id_pesquisa_produto&gt;</code>: Retorna uma pesquisa de produto espec\u00edfica.</li> <li><code>POST /pesquisas_produto</code>: Cria uma nova pesquisa de produto.</li> <li><code>PUT /pesquisa_produto/&lt;id_pesquisa_produto&gt;</code>: Atualiza uma pesquisa de produto.</li> <li><code>DELETE /pesquisa_produto/&lt;id_pesquisa_produto&gt;</code>: Deleta uma pesquisa de produto.</li> <li><code>GET /pesquisas_restaurante</code>: Retorna todas as pesquisas de restaurantes.</li> <li><code>GET /pesquisa_restaurante/&lt;id_pesquisa_restaurante&gt;</code>: Retorna uma pesquisa de restaurante espec\u00edfica.</li> <li><code>POST /pesquisas_restaurante</code>: Cria uma nova pesquisa de restaurante.</li> <li><code>PUT /pesquisa_restaurante/&lt;id_pesquisa_restaurante&gt;</code>: Atualiza uma pesquisa de restaurante.</li> <li> <p><code>DELETE /pesquisa_restaurante/&lt;id_pesquisa_restaurante&gt;</code>: Deleta uma pesquisa de restaurante.</p> </li> <li> <p>Pesquisa Avan\u00e7ada:</p> </li> <li><code>GET /pesquisar_restaurantes/&lt;nome_restaurante&gt;</code>: Pesquisa restaurantes pelo nome.</li> <li><code>GET /pesquisar_prato/&lt;nome_produto&gt;</code>: Pesquisa produtos pelo nome.</li> <li><code>GET /filtrar_maior_distancia</code>: Lista restaurantes por ordem decrescente de dist\u00e2ncia.</li> <li><code>GET /filtrar_menor_distancia</code>: Lista restaurantes por ordem crescente de dist\u00e2ncia.</li> <li><code>GET /filtrar_menor_preco</code>: Lista produtos por ordem crescente de pre\u00e7o.</li> <li><code>GET /filtrar_maior_preco</code>: Lista produtos por ordem decrescente de pre\u00e7o.</li> </ol>"},{"location":"server/#erro-handling","title":"Erro Handling","text":"<ul> <li><code>@app.errorhandler(404)</code>: Um manipulador de erros personalizado para a rota 404 (p\u00e1gina n\u00e3o encontrada).</li> </ul>"},{"location":"server/#execucao-do-servidor","title":"Execu\u00e7\u00e3o do Servidor","text":"<ul> <li><code>app.run()</code>: Inicia o servidor Flask.</li> </ul>"},{"location":"server/#uso","title":"Uso","text":"<p>O servidor pode ser utilizado para criar um sistema</p> <p>de gest\u00e3o de restaurantes e produtos, onde usu\u00e1rios podem realizar pesquisas e gerenciar informa\u00e7\u00f5es relevantes. Ele oferece uma API RESTful para a intera\u00e7\u00e3o com um banco de dados de restaurantes e produtos.</p>"},{"location":"sobre/","title":"Sobre","text":""},{"location":"sobre/#integrantes-do-grupo","title":"Integrantes do Grupo:","text":"<ul> <li>Enzo Matschinski Kummer - 222005377 - Product Owner</li> <li>Vin\u00edcius Gon\u00e7alves Duarte - 222026869 - Scrum Master </li> <li>Marcelo Vitor Meira de Lucena - 221030034</li> <li>Gabriel Ribeiro da Silva - 222005401</li> <li>Weldo Gon\u00e7alves da Silva Junior - 222014133</li> <li>Rodrigo reis dos santos - 222026546 -</li> <li>Yuri Santana Lopes - 222009750</li> <li>Jo\u00e3o Victor das Neves Romero - 221028546</li> <li>Alan Henrique -190101270</li> </ul>"},{"location":"sobre/#historietas","title":"Historietas","text":"<ul> <li>O usu\u00e1rio chegou no totem presente na Pra\u00e7a de Alimenta\u00e7\u00e3o do shopping, onde se   deparou com uma tela inicial que mostrava uma aba de pesquisa, um mapa, e logo   abaixo, um pequeno \u201cfeed\u201d com os principais pratos e promo\u00e7\u00f5es do dia;</li> <li>O usu\u00e1rio escolheu pesquisar, e ent\u00e3o lhe foi aberta uma aba de pesquisa, onde ele   filtrou o resultado por pratos ou restaurantes, dist\u00e2ncia e pre\u00e7o;</li> <li>O usu\u00e1rio pesquisou pelo nome do prato que deseja comer, e o totem lhe mostrou   todas as op\u00e7\u00f5es de diferentes restaurantes que compreendem seu desejo,   ordenados por dist\u00e2ncia geogr\u00e1fica. Ou, o usu\u00e1rio escreveu o restaurante que   deseja pesquisar, e abriu uma aba do perfil do restaurante, com card\u00e1pio, dist\u00e2ncia   do totem, etc.;</li> <li>O usu\u00e1rio selecionou o prato que deseja consumir e recebeu todas as informa\u00e7\u00f5es   necess\u00e1rias para chegar at\u00e9 o restaurante, pre\u00e7o, estimativa de tempo de preparo,   etc.;</li> <li>Ap\u00f3s receber todas essas informa\u00e7\u00f5es, \u00e9 perguntado ao usu\u00e1rio se o mesmo deseja   fazer login para salvar seus interesses e desejos. Caso o cliente deseje fazer login, o   totem (aplicativo) exibe uma nova p\u00e1gina, onde o usu\u00e1rio preenche seus dados   (caso j\u00e1 tenha se cadastrado no sistema) ou escolhe criar um novo cadastro. Caso o   usu\u00e1rio deseje criar, ele \u00e9 direcionado para a tela de cria\u00e7\u00e3o de cadastro, onde ele   preenche com seu login e senha de prefer\u00eancia. Essas informa\u00e7\u00f5es s\u00e3o ent\u00e3o   criptografadas e cadastradas no banco de dados;</li> <li>Ap\u00f3s o processo de login (ou de dispensar esse processo), \u00e9 perguntado ao usu\u00e1rio   se ele \u00e9 PcD (Pessoa com Defici\u00eancia) e precisa de ajuda para chegar at\u00e9 o   restaurante. Caso o usu\u00e1rio selecione que sim, a equipe do shopping ser\u00e1 alertada   para que envie algu\u00e9m;</li> <li> <p>O staff do shopping possui um simples programa que os alerta quando alguma PcD   necessita de ajuda, informando a localiza\u00e7\u00e3o do totem onde essa pessoa est\u00e1.</p> </li> <li> <p>O administrador conferiu se todos os produtos listados est\u00e3o corretos. Quando um   restaurante foi \u00e0 fal\u00eancia, o administrador removeu o restaurante da lista de   restaurantes, assim como todos os seus dados do banco de dados.</p> </li> <li> <p>O administrador faz o cadastro de novos \u201ctotens\u201d no sistema, informando sua   localiza\u00e7\u00e3o geogr\u00e1fica. Ele tamb\u00e9m remove um totem do sistema, caso o mesmo   seja retirado.</p> </li> <li> <p>O vendedor acessa a plataforma destinada aos vendedores para ali cadastrar seu   restaurante com a localiza\u00e7\u00e3o geogr\u00e1fica</p> </li> <li>Depois, o vendedor pode criar os pratos de seu restaurante, com pre\u00e7o, foto e tempo   de preparo m\u00e9dio.</li> <li>O administrador aprova ou reprova a cria\u00e7\u00e3o de perfil de um restaurante, assim   como a p\u00e1gina dos seus pratos.</li> </ul>"},{"location":"sobre/#ferramentas","title":"Ferramentas","text":""},{"location":"sobre/#linguagem","title":"Linguagem:","text":"<p>Para o desenvolvimento do site, usaremos javascript, css e react.</p> <ul> <li>Usaremos o padr\u00e3o do Google de codifica\u00e7\u00e3o por javascript (Guia de Estilo Google)</li> <li>Ser\u00e1 usado ESLint como programa que ir\u00e1 verificar o padr\u00e3o de codifica\u00e7\u00e3o. (ESLint)</li> </ul>"},{"location":"sobre/#framework-de-teste","title":"Framework de Teste:","text":"<ul> <li>Como framework de teste, usaremos o JTest, que permite o teste de javascript e funciona bem com react.</li> </ul>"},{"location":"sobre/#bibliotecas-e-frameworks-utilizadas","title":"Bibliotecas e Frameworks Utilizadas:","text":"<ul> <li>Bibliotecas e frameworks para o backend:</li> <li>Flask</li> <li>Flask_SQLAlchemy</li> <li>MySQL-connector-python</li> <li>MySQLclient</li> <li>Flask-CORS</li> <li>Pytest</li> </ul>"},{"location":"sobre/#verificador-de-codigo","title":"Verificador de C\u00f3digo:","text":"<ul> <li>ESLint (verificador est\u00e1tico de Javascript e React)</li> </ul>"},{"location":"sobre/#sites-utilizados","title":"Sites Utilizados:","text":"<ul> <li>GitHub (controle de vers\u00f5es)</li> <li>Trello (SCRUM/Kanban)</li> </ul>"},{"location":"sobre/#verificador-de-cobertura","title":"Verificador de Cobertura:","text":"<ul> <li>Plugin Cypress (Cypress)</li> </ul>"},{"location":"sobre/#gerador-de-documentacao","title":"Gerador de Documenta\u00e7\u00e3o:","text":"<ul> <li>Mkdocs</li> </ul>"},{"location":"sobre/#divisao-das-acoes-por-historietas","title":"Divis\u00e3o das A\u00e7\u00f5es por Historietas:","text":"<p>1\u00b0 Sprint: </p> <ul> <li>Hist\u00f3ria: 01</li> </ul> <p>2\u00b0 Sprint (Mudan\u00e7a de Sistema): </p> <ul> <li>Hist\u00f3rias: 01, 02, 03</li> </ul> <p>3\u00b0 Sprint (Integra\u00e7\u00e3o): </p> <ul> <li>Hist\u00f3rias: 04, 08, 11</li> </ul> <p>4\u00b0 Sprint: </p> <ul> <li>Hist\u00f3rias: 05, 10, 12</li> </ul> <p>EU01: Front-end</p> <p>O usu\u00e1rio chegou no totem presente na Pra\u00e7a de Alimenta\u00e7\u00e3o do shopping, onde se deparou com uma tela inicial que mostrava uma aba de pesquisa, um mapa, e logo abaixo, um pequeno \u201cfeed\u201d com os principais pratos e promo\u00e7\u00f5es do dia.</p> <p>EU02: Front-end</p> <p>O usu\u00e1rio escolheu pesquisar, e ent\u00e3o lhe foi aberta uma aba de pesquisa, onde ele filtrou o resultado por pratos ou restaurantes, dist\u00e2ncia e pre\u00e7o.</p> <p>EU03: Front-end</p> <p>O usu\u00e1rio pesquisou pelo nome do prato que deseja comer, e o totem lhe mostrou todas as op\u00e7\u00f5es de diferentes restaurantes que compreendem seu desejo, ordenados por dist\u00e2ncia geogr\u00e1fica. Ou, o usu\u00e1rio escreveu o restaurante que deseja pesquisar, e abriu uma aba do perfil do restaurante, com card\u00e1pio, dist\u00e2ncia do totem, etc.;</p> <p>EU04: Front-end</p> <p>O usu\u00e1rio selecionou o prato que deseja consumir e recebeu todas as informa\u00e7\u00f5es necess\u00e1rias para chegar at\u00e9 o restaurante, pre\u00e7o, estimativa de tempo de preparo, etc.</p> <p>EU05: Sistema a ser implementado</p> <p>Ap\u00f3s receber todas essas informa\u00e7\u00f5es, o usu\u00e1rio decide se quer fazer login para salvar prefer\u00eancias. Se optar pelo login, pode inserir dados j\u00e1 cadastrados ou criar um novo cadastro, onde as informa\u00e7\u00f5es s\u00e3o criptografadas e armazenadas.</p> <p>EU06: Removido do projeto</p> <p>Questiona-se o usu\u00e1rio se ele \u00e9 uma Pessoa com Defici\u00eancia (PcD) e requer assist\u00eancia para navegar at\u00e9 o restaurante. Se afirmativo, a equipe do shopping \u00e9 notificada para prestar aux\u00edlio.</p> <p>EU07: Removido do projeto</p> <p>O sistema de gest\u00e3o do shopping recebe alertas quando usu\u00e1rios PcD necessitam de ajuda, mostrando a localiza\u00e7\u00e3o do totem utilizado.</p> <p>EU08: Back-end</p> <p>O administrador verifica a corre\u00e7\u00e3o dos produtos listados. Em caso de fechamento de um restaurante, ele o remove da listagem e do banco de dados.</p> <p>EU09: Removido do projeto</p> <p>O administrador cadastra novos totens no sistema e remove os que n\u00e3o est\u00e3o mais em uso.</p> <p>EU01: Back-end</p> <p>Vendedores acessam uma plataforma espec\u00edfica para cadastrar seus restaurantes, incluindo a localiza\u00e7\u00e3o geogr\u00e1fica.</p> <p>EU11: Back-end</p> <p>Vendedores podem cadastrar pratos dos seus restaurantes, definindo pre\u00e7o, foto e tempo m\u00e9dio de preparo.</p> <p>EU12: Sistema a ser implementado</p> <p>O administrador tem a fun\u00e7\u00e3o de aprovar ou reprovar a cria\u00e7\u00e3o de perfis de restaurantes e seus pratos.</p>"},{"location":"sobre/#backlog-de-desenvolvimento","title":"Backlog de Desenvolvimento","text":""},{"location":"sobre/#sprint-1","title":"Sprint 1","text":"<ul> <li> <p>Desenvolvimento Front-end: Implementa\u00e7\u00e3o da tela inicial \"Food Finder\" com barra de navega\u00e7\u00e3o e abas para Buscar, Pratos do Dia e Mapa.</p> </li> <li> <p>Desenvolvimento Back-end: Cria\u00e7\u00e3o do banco de dados com funcionalidades CRUD para usu\u00e1rios e restaurantes.</p> </li> </ul>"},{"location":"sobre/#sprint-2","title":"Sprint 2","text":"<ul> <li> <p>Transi\u00e7\u00e3o para Web: Mudan\u00e7a do sistema de Python para uma aplica\u00e7\u00e3o web usando JavaScript, CSS e React.</p> </li> <li> <p>Reconstru\u00e7\u00e3o e Adi\u00e7\u00f5es no Front-end:</p> </li> <li>Reestrutura\u00e7\u00e3o do front-end para ambiente web.</li> <li>Adi\u00e7\u00e3o de filtros de pesquisa por tipo de prato.</li> <li>Inclus\u00e3o de exemplos de produtos.</li> <li> <p>Desenvolvimento da fun\u00e7\u00e3o de mapa e da p\u00e1gina \"Pratos do Dia\".</p> </li> <li> <p>Funcionalidades CRUD para Pratos no Back-end.</p> </li> <li> <p>Observa\u00e7\u00f5es: Decis\u00e3o de n\u00e3o incluir p\u00e1ginas individuais de restaurantes devido \u00e0 complexidade e redund\u00e2ncia com a funcionalidade de busca.</p> </li> </ul>"},{"location":"sobre/#sprint-3","title":"Sprint 3","text":"<ul> <li> <p>P\u00e1gina de Administrador e Dono de Restaurante: Implementa\u00e7\u00e3o de funcionalidades para adicionar, remover e editar pratos e restaurantes.</p> </li> <li> <p>Melhorias na Interface:</p> </li> <li>Adi\u00e7\u00e3o de imagens aos pratos listados.</li> <li> <p>Implementa\u00e7\u00e3o de um submenu para navega\u00e7\u00e3o entre p\u00e1ginas de Admin e Dono de Restaurante.</p> </li> <li> <p>Mapa Interativo: Desenvolvimento de um mapa interativo na p\u00e1gina de mapas.</p> </li> <li> <p>Atualiza\u00e7\u00e3o do Banco de Dados: Inclus\u00e3o de pratos por restaurante e links para imagens dos produtos.</p> </li> </ul>"},{"location":"sobre/#sprint-4","title":"Sprint 4","text":"<ul> <li> <p>Integra\u00e7\u00e3o e Documenta\u00e7\u00e3o: Verifica\u00e7\u00e3o da integra\u00e7\u00e3o entre as fun\u00e7\u00f5es da p\u00e1gina de Admin e a listagem de restaurantes.</p> </li> <li> <p>Funcionalidades de Filtragem: Implementa\u00e7\u00e3o da filtragem de restaurantes por dist\u00e2ncia.</p> </li> </ul>"}]}